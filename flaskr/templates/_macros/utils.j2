{% from '_macros/lang.j2' import set_lang, render_lang_object with context %}


{% macro render_contents_entry(href, titles, sub=false) %}
<a class="p-1 w-100 {%- if sub %} ps-4 small {% else %} ps-3 {% endif -%}" href="#{{ href }}" style="position: relative;">
  {%- if not sub %}
  <h6 class="mb-0 w-100">
  {%- endif %}
  {{ render_lang_object(titles) }}
  {%- if not sub %}
  </h6>
  {%- endif %}
</a>
{% endmacro %}


{% macro render_breadcrumb_item(name, link) %}
<li title="{{ name['en'] }}" class="py-1">
  <a href="{{ link }}">{{ render_lang_object(name) }}</a>
</li>
{% endmacro %}


{%- macro parse_header_image_styles(image) -%}
  object-position: {{ image.x_align }} {{ image.y_align }}; background-position: {{ image.x_align }} {{ image.y_align }};
{%- endmacro -%}


{% macro offset_to_pct(offset) %}
{%- if offset == 'top' %}0%{% elif offset == 'center' %}50%{% elif offset == 'bottom' %}100%{% else %}{{offset}}{% endif -%}
{% endmacro %}


{%- macro render_header(text, level) %}
<h{{ level }}>{{ render_lang_object(text) }}</h{{ level }}>
{%- endmacro %}


{%- macro render_content(content, custom_render=none, header_level=3) %}
{%- for section in content %}
  {{ render_section(section, custom_render=custom_render) }}
{%- endfor %}
{%- endmacro %}


{%- macro render_section(section, custom_render=none, header_level=3) %}
  {%- with section_id = section.id %}
  <div id="{{ section_id }}" data-section="{{ section_id }}">
    {%- if section.show %}
    {{ render_header(section.head, section.level + header_level) }}
    {%- endif %}

    {%- for line in section %}
    {%- if line.lineType == 'DocumentLineText' %}
      <p> {{ render_lang_object(line, custom_render=custom_render) }} </p>
    {%- elif line.lineType == 'DocumentSection' %}
      {{ render_section(line, custom_render=custom_render, header_level=header_level) }}
    {%- elif line.lineType == 'DocumentLineInsert' %}
      {% include '_includes/' + line.name + '.j2' ignore missing with context %}
    {%- endif %}
    {%- endfor %}
  </div>
  {%- endwith %}
{%- endmacro %}


{%- macro render_open_close_button(target, toggle, class_name, symbol, start_open=false, size=none) %}
{%- with is_accordion = (toggle == 'accordion') %}
  <a
    id="{{target}}-toggle-btn-link"
    class="toggle-btn toggle-btn-{{ class_name }} {% if is_accordion %}accordion-button{% endif %} {% if not start_open %}collapsed{% endif %} {% if size %}fs-{{ size }}{% endif %} w-100 h-100"
    type="button"
    data-bs-toggle="{{ 'collapse' if is_accordion else toggle }}"
    data-bs-target="{{ target }}"
    aria-expanded="{{ 'true' if start_open else 'false' }}" aria-controls="{{ target }}"
    href="#" tabindex="0"
  >
    <span
      class="{% if is_accordion and not start_open %}collapsed{% endif %}"
      data-bs-toggle="button" data-bs-target="{{target}}-toggle-btn-link"
    >{{ symbol }}</span>
  </a>
  {%- endwith %}
{%- endmacro %}


{%- macro render_toggle_button_plus(target, toggle, start_open=false, size=none) %}
{{ render_open_close_button( target, toggle, 'plus', '+', start_open=start_open, size=size ) }}
{%- endmacro %}


{%- macro render_toggle_button_arrow(target, toggle, start_open=false, size=none) %}
{{ render_open_close_button( target, toggle, 'arrow', 'â–¼', start_open=start_open, size=size ) }}
{%- endmacro %}


{%- macro loader() %}
  <div class="spinner-grow" style="width: 0.25rem; height: 0.25rem;" role="status"></div>
  <div class="spinner-grow" style="width: 0.25rem; height: 0.25rem;" role="status"></div>
  <div class="spinner-grow" style="width: 0.25rem; height: 0.25rem;" role="status"></div>
  <span class="visually-hidden">Loading...</span>
{%- endmacro %}
