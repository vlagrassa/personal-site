{% from '_includes/lang.j2' import set_lang with context %}

{#
  Render the site logo, with optional extra class(es) and hover function.
#}
{% macro render_logo(classes=None, hover=None) -%}
<h1
    class="my-logo{% if class %} {{class}}{% endif %}"
    {% if hover %}
    onmouseenter="{{hover}}(this, true)" onmouseleave="{{hover}}(this, false)"
    {% endif %}
>vlɒgrɒssɒ</h1>
{%- endmacro %}


{#
  Render a list of section pages as header buttons, separated by the given character.
#}
{% macro render_sections(sections, sep="&#x2B26;") %}
  {% for section in sections %}
  {% if loop.index0 > 0 %}
    <div class="header-separator">{{sep}}</div>
  {% endif %}
  <div class="header-button">
    <a {% if section.link %}href="{{section.link}}"{% endif %}>
      {% for l, t in section.title.items() %}<span {{set_lang(l)}}>{{t}}</span>{% endfor %}
    </a>
    <div class="header-button-underline"></div>
  </div>
  {% endfor %}
{% endmacro %}


{#
  Render a list of links as a responsive set of slashes.
#}
{% macro render_links(links, closed_width, open_width) %}
  {% for link in links %}
    <a href="{{ link.url }}" class="slice" style="background-color: {{link.color}};" onmouseenter="openicon(this)" onmouseleave="closeicon(this)" onfocus="openicon(this)" onblur="closeicon(this)">
      <img title="{{link.title}}" height="32px" width="40px" style="object-fit: contain;" src="{{ url_for('static', filename='logos/' + link.path + '/logo-dark.png') }}">
    </a>
  {% endfor %}
  <script>
    const icons = Array.from(document.getElementsByClassName('slice'));
    icons.forEach(element => {
      element.style.setProperty('--w', '{{closed_width}}px');
    })

    function openicon(iconEl) {
      iconEl.style.setProperty('--w', '{{open_width}}px');
      {%- with total_width = links|length * closed_width %}
      const target_width = {{total_width - open_width}} / ({{links|length}} - 1);
      icons.forEach(element => {
        if (element != iconEl) {
          element.style.setProperty('--w', target_width + 'px');
        }
      });
      {%- endwith %}
    }

    function closeicon(iconEl) {
      icons.forEach(element => {
        element.style.setProperty('--w', '{{closed_width}}px');
      });
    }
  </script>
{% endmacro %}


{#
  Render a button in the footer menu.
#}
{% macro render_footer_button(icon) %}
  <span id="footer-{{icon}}" class="material-symbols-outlined footer-icon">{{ icon }}</span>
{% endmacro %}


{#
  Render a button in the footer menu with an associated offcanvas menu.
#}
{% macro render_footer_button_menu(icon, name, label) %}
  <a data-bs-toggle="offcanvas" href="#{{ label }}" role="button" aria-controls="{{ label }}">
    {{ render_footer_button(icon) }}
  </a>

  {# Offcanvas menu #}
  <div id="{{ label }}" class="offcanvas offcanvas-bottom offcanvas-footer-menu rounded-top" tabindex="-1" aria-labelledby="{{ label }}-label">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title mt-1" id="{{ label }}-label">
        <span {{ set_lang("en") }}>{{ name.en }}</span>
        <span {{ set_lang("ja") }}>{{ name.ja }}</span>
        <span {{ set_lang("tj") }}>{{ name.tj }}</span>
      </h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    {{ caller() }}
  </div>

  {# Move the offcanvas element to the body #}
  <script>
    document.body.appendChild(document.getElementById('{{ label }}'));
  </script>
{% endmacro %}
